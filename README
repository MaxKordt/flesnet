FLESnet usage for FLIB stand alone readout
==========================================

General:
--------

SIMPATH has to point to a fairroot external packages installation

FLESnet:
--------

cd build
./flesnet --help
cp ../contrib/flesnet_flib_example.cfg ./flesnet.cfg
modify flesnet.cfg:
 - add as many lines 'input-nodes = localhost' as readout links
 - choose 'processor-executable' ,e.g. to store data

Example: read 4 FLIB input links.
Start flib_ctrl before starting flesnet!
./flesnet -i0 -i1 -i2 -i3 -c0
 - add as many -iN as readout links


FLIB Control:
-------------

cd build
./flib_ctrl --help

Example: read flib input links with microslice size 8 Âµs,
sys_id 0x10 and sys_ver 0x01:
./flib_ctrl -t 1000 -s link -i 0x10 -v 0x01

Do not start/stop while flesnet is running!

If link is selected as data source it is mandatory to provide 
the subsystem identifier and the subsystem format version
of the connected component. For all other data sources this is
configured automatically. This information defines which 
analysis code is called later on.

Defined subsystem identifiers are:
Silicon Tracking System (STS) 		0x10 
Micro-Vertex Detector (MVD) 		0x20 
Ring Imaging CHerenkov detector (RICH) 	0x30 
Transition Radiation Detector (TRD) 	0x40 
Muon Chamber system (MuCh) 		0x50 
Resistive Plate Chambers (RPC) 		0x60 
Electromagnetic CALorimeter (ECAL) 	0x70 
Projectile Spectator Detector (PSD) 	0x80
FLIB hardware pattern generator		0xF0
FLIB front end emulation		0xF1
Flesnet software pattern generator	0xFA

Control Client:
---------------

cd ctrl
source config.sh
cd control/cliclient
./cliclient -help

Example: send DLM 0x8 over flib link 0 to nodeid 0x1.
./cliclient localhost:9750 dlm 0x1 0x8


Preparing the FLIB
==================

Download a bitfile from the build server
----------------------------------------

run, e.g.:

curl -O -u <GSI web login user> https://cbm-firmware.gsi.de/result/XX/flib_cnet_readout/XXX/htg_k7_cnet_readout.bit


Programming the FPGA
--------------------

cp contrib/flib-reprogramm to a location in your path and adopt settings
usage:
flib-reprogramm path/to/bitfile.bit

If programming the FPGA the first time since powerup or 
your machine does not support PCIe hot-plugging you need to reboot 
the machine after programming.


Loading/reloading the kernel driver
-----------------------------------

After rebooting you machine you need to load the kernel driver

cd misc/kernel
sudo ./reload.sh


Check
-----

lspci -v should give you something like

...
02:00.0 Signal processing controller [1108]: CERN/ECP/EDU Device beaf
	Subsystem: CERN/ECP/EDU Device beaf
	Flags: bus master, fast devsel, latency 0, IRQ 17
	Memory at f8000000 (32-bit, non-prefetchable) [size=32M]
	Memory at fa000000 (32-bit, non-prefetchable) [size=4M]
	Capabilities: <access denied>
	Kernel driver in use: rorcfs
...

Note the device and the "Kernel driver in use" line
