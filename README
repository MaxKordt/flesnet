FLESnet usage for FLIB stand alone readout
==========================================

NOTE the new FAQ section at the end of the document!

FLESnet:
--------

cd build
./flesnet --help
cp ../contrib/flesnet_flib_example.cfg ./flesnet.cfg
modify flesnet.cfg:
 - add as many lines 'input-nodes = localhost' as readout links
 - choose 'processor-executable' ,e.g. to store data

Example: read 4 FLIB input links.
Start flib_ctrl before starting flesnet!
./flesnet -i0 -i1 -i2 -i3 -c0
 - add as many -iN as readout links

NOTE: In case flesnet crashed, exited with an exception, was stopped
or is just not working you might need to cleanup some things.
See the FAQs for the cleanup procedure.

FLIB Control:
-------------

cd build
./flib_ctrl --help

Example: read flib input links with microslice size 8 Âµs,
sys_id 0x10 and sys_ver 0x01:
./flib_ctrl -t 1000 -s link -i 0x10 -v 0x01

Do not start/stop while flesnet is running!

If link is selected as data source it is mandatory to provide 
the subsystem identifier and the subsystem format version
of the connected component. For all other data sources this is
configured automatically. This information defines which 
analysis code is called later on.

Defined subsystem identifiers are:
Silicon Tracking System (STS) 		0x10 
Micro-Vertex Detector (MVD) 		0x20 
Ring Imaging CHerenkov detector (RICH) 	0x30 
Transition Radiation Detector (TRD) 	0x40 
Muon Chamber system (MuCh) 		0x50 
Resistive Plate Chambers (RPC) 		0x60 
Electromagnetic CALorimeter (ECAL) 	0x70 
Projectile Spectator Detector (PSD) 	0x80
FLIB hardware pattern generator		0xF0
FLIB front end emulation		0xF1
Flesnet software pattern generator	0xFA

Control Client:
---------------

cd ctrl
source config.sh
cd control/cliclient
./cliclient -help

Example: send DLM 0x8 over flib link 0 to nodeid 0x1.
./cliclient localhost:9750 dlm 0x1 0x8

General:
--------

SIMPATH has to point to a fairroot external packages installation


Preparing the FLIB
==================

Download a bitfile from the build server
----------------------------------------

run, e.g.:

curl -O -u <GSI web login user> https://cbm-firmware.gsi.de/result/XX/flib_cnet_readout/XXX/htg_k7_cnet_readout.bit

(NOTE: failing to provide a valid user/password won't give an error
but result in an unuseable file.)

Programming the FPGA
--------------------

cp contrib/flib-reprogramm to a location in your path and adopt settings
usage:
flib-reprogramm path/to/bitfile.bit

If programming the FPGA the first time since powerup or 
your machine does not support PCIe hot-plugging you need to reboot 
the machine after programming.


Loading/reloading the kernel driver
-----------------------------------

After rebooting you machine you need to load the kernel driver

cd misc/kernel
sudo ./reload.sh


Check if FLIB is operational
----------------------------

'lspci -v -d 10dc:beaf' should give you something like:
(NOTE: the kernel driver should be listed)

02:00.0 Signal processing controller [1108]: CERN/ECP/EDU Device beaf
	Subsystem: CERN/ECP/EDU Device beaf
	Flags: bus master, fast devsel, latency 0, IRQ 17
	Memory at f8000000 (32-bit, non-prefetchable) [size=32M]
	Memory at fa000000 (32-bit, non-prefetchable) [size=4M]
	Capabilities: <access denied>
	Kernel driver in use: rorcfs


FAQ
===

Flesnet exits with:
"ERROR: rdma_bind_addr(port=20079) failed: Cannot assign requested
address terminate called without an active exception"

- Check if there are leftover procecces for a previous run.
- Check if 'localhost' is set properbly in /etc/hosts or
  try to use '127.0.0.1' instead of 'localhost' in the flesnet.cfg


What should I do if something went wrong?

- If flesnet crashed, exited with an exception, was stopped
  or is just not working you might need to cleanup some things.
  Try to one or more of the following things:

   Check if there are left over processes and kill them.
   Most likely there is still a 'tsclient' process.

   Remove leftover shared memories if present:
   'sudo rm /dev/shm/flesnet_*'

   Reprogramm the FLIB FPGA and reload the kernel module.


How can I check if the FLIB is installed correctly?

- See the 'Check' section in 'Preparing the FLIB'


What to do if the FLIB/PC gets unresponsible after programming
or a few minutes of use?

- Set the boot parameters 'pcie_aspm=off 'acpi=ht noapic'
- Try to disable ASPM in the BIOS settings of your host PC

My syslog/kernel log is flooded with errors like:
flip00 kernel: [  573.734102] pcieport 0000:00:01.0: AER: Corrected error received: id=0008
flip00 kernel: [  573.734113] pcieport 0000:00:01.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, id=0008(Receiver ID)
flip00 kernel: [  573.734115] pcieport 0000:00:01.0:   device [8086:0e02] error status/mask=00000001/00002000
flip00 kernel: [  573.734117] pcieport 0000:00:01.0:    [ 0] Receiver Error         (First)

- Set the boot parameters 'pcie_aspm=off 'acpi=ht noapic'


Felsnet can not allocate enough memory.

- There are some problems with the ulimt on Ubuntu at the moment.
  Use 'sudo ulimit -l unlimited' as a workaround.


Programming the FLIB FPGA is very slow (lasts longer than 60s).

- There is an issue with the Xilinx Lab Tools.
  Try this solution http://forums.xilinx.com/t5/Design-Tools-Others/iMPACT-severe-TCK-frequency-derating-under-Linux-still-the-same/m-p/422263#M5692


The FLIB programming script reports the warning:
Warning: Chain frequency (1000000) is less than the current cable speed (6000000).
 Adjust to cable speed (1000000).
Maximum TCK operating frequency for this device chain: 1000000.

- See 'Programming the FLIB FPGA is very slow'


The PC restarts immediately after I try to shut it down.

This is an hardware issue with HTG-K7 rev 1.0 boards. It is caused by the PCIe
wake signal changing its state when the FPGA looses configuration after power down.
Workarounds:
- Unplug the power after shutting down
- Try to disable PCIe wake capability, e.g. by changing wake-on-lan BIOS settings
- Isolate the wake# pin on the PCIe connector
